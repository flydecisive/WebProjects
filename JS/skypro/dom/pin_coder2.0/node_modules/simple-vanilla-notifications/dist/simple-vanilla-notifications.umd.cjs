(function(t,e){typeof exports=="object"&&typeof module<"u"?e(exports):typeof define=="function"&&define.amd?define(["exports"],e):(t=typeof globalThis<"u"?globalThis:t||self,e(t["Simple Vanilla Notifications"]={}))})(this,function(t){"use strict";var I=Object.defineProperty;var A=(t,e,s)=>e in t?I(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var N=(t,e,s)=>(A(t,typeof e!="symbol"?e+"":e,s),s);class e extends Error{constructor(){super(...arguments);N(this,"message","The notification manager has been destroyed, so none of the functions work any more.")}}function s(r){let a=-1;for(const l of r.keys())l>a&&(a=l);return a+1}function b({defaultAutoDismissTimeout:r=3200,container:a,defaultDismissible:l=!0,defaultAnimated:T=!0,defaultExitAnimationTime:L=350}={}){let c=!1;const f=a||document.createElement("output");a||document.body.appendChild(f),f.classList.add("svn-notifications-container");const d=new Map;function M(o,{element:u,dismissible:D=l,autoDismissTimeout:w=r,animated:y=T,exitAnimationTime:k=L}={}){if(c)throw new e;const m=s(d),i=u||document.createElement("div");if(i.classList.add("svn-notification"),i.setAttribute("role","status"),i.setAttribute("aria-live","polite"),y&&i.classList.add("svn-animated"),typeof o=="string"){const n=document.createElement("span");n.classList.add("svn-notification-text"),n.innerText=o,i.appendChild(n)}else o instanceof HTMLElement&&i.appendChild(o);let p;function h(n=!0){window.clearTimeout(p),n&&i.remove(),d.delete(m)}function g(){console.log("Dismissed"),y||h(),i.classList.add("svn-exiting"),h(!1),window.setTimeout(h,k)}if(w>0&&(p=setTimeout(g,w)),D){const n=document.createElement("button");n.classList.add("svn-notification-close-button"),n.innerText="X",n.addEventListener("click",g),i.appendChild(n)}const E={id:m,timeoutID:p,contents:o,element:i,dismiss:g};return f.appendChild(i),d.set(m,E),E}function x(o){var u;if(c)throw new e;(u=d.get(o))==null||u.dismiss()}function v(){if(c)throw new e;d.forEach(o=>o.dismiss())}function C(){if(c)throw new e;v(),f.remove(),c=!0}return{activeNotifications:d,destroyed:c,createNotification:M,dismissNotification:x,dismissAllNotifications:v,destroy:C,element:f}}const S="";t.NotificationManagerDestroyedError=e,t.createNotificationManager=b,t.getNextNotificationID=s,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
